name: üöö Deploy

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  preparation:
    name: üéõÔ∏è Preparation
    if: ${{ (github.event.pull_request.merged == true) && ( (contains(github.event.pull_request.labels.*.name, 'bump:major')) || (contains(github.event.pull_request.labels.*.name, 'bump:minor')) || (contains(github.event.pull_request.labels.*.name, 'bump:patch')) ) }}

    runs-on: ubuntu-latest

    outputs:
      id: ${{ steps.release_drafter.outputs.id }}
      tag_name: ${{ steps.release_drafter.outputs.tag_name }}

    steps:
      - name: üéüÔ∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: üìÉ Create Changelog and Release Draft
        id: release_drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: false

  packaging:
    name: üì¶ Packaging
    needs: preparation

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: üéüÔ∏è Checkout Repository
        uses: actions/checkout@v3

      - name: üßÆ Setup NodeJS Environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: üóÉÔ∏è Install and Cache Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile --network-timeout 600000

      - name: üõ†Ô∏è Build Electron Artifacts
        uses: samuelmeuli/action-electron-builder@v1
        env:
          RESOLVED_VERSION: ${{ needs.preparation.outputs.tag_name }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: false

      - name: üì§ Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: electron_build_artifact
          path: dist/
          if-no-files-found: error

  release:
    name: üóÉÔ∏è Release Artifacts
    needs: [preparation, packaging]

    runs-on: ubuntu-latest

    steps:
      - name: üì• Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: electron_build_artifact
          path: dist/

      - name: üìå Attach Artifacts to Release Draft
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "dist/*.exe;dist/*.blockmap"
          overwrite: true
          draft: true
          release_id: ${{ needs.preparation.outputs.id }}

      - name: üì∞ Publish Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.preparation.outputs.id }}

  bump:
    name: üé¢ Bump Version
    needs: [preparation, packaging, release]

    runs-on: ubuntu-latest

    steps:
      - name: üéüÔ∏è Checkout Repository
        uses: actions/checkout@v3

      - name: üè∑Ô∏è Format Tag Name
        run: |
          VERSION=${{ needs.preparation.outputs.tag_name }}
          echo "VERSION=${VERSION:1}" >> $GITHUB_ENV

      - name: ü™ú Bump package.json Version
        uses: jossef/action-set-json-field@v2
        with:
          file: package.json
          field: version
          value: ${{ env.VERSION }}

      - name: ‚å®Ô∏è Commit Files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "chore(bump): bump version ${{ env.VERSION }} [skip ci]"
          git tag ${{ needs.preparation.outputs.tag_name }}

      - name: üì® Push Changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          github_token: ${{ env.PAT }}
          branch: main